{"version":3,"sources":["MatchAdd.js","Match.js","Main.js","Coupon.js","Coupons.js","Header.js","App.js","index.js"],"names":["MatchAdd","item","display","checkFlag","className","hosts","visitors","tip","odds","toFixed","style","active","icon","faCheckCircle","color","faTimesCircle","Match","match","handleClick","id","onClick","hostsOdds","drawOdds","visitorsOdds","Main","props","matches","map","key","matchesAdd","sort","a","b","length","type","min","max","money","value","moneyToPay","onChange","handleChange","moneyToWin","clearMatchesAdd","addBet","Coupon","coupon","Coupons","results","score","coupons","index","matchAdd","checkResult","Header","exact","path","to","App","state","findIndex","splice","filter","concat","setState","event","target","alert","push","i","stateResults","result","addMoney","prevstate","generateScoors","win","draw","loss","hostsChance","Math","floor","drawChance","visitorsChance","random","fetch","then","response","json","data","this","basename","process","render","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab74891a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nfunction MatchAdd({ item, display, checkFlag }) {\r\n \r\n   return (\r\n      <div>\r\n         <span className=\"names-of-teams\">{`${item.hosts} - ${item.visitors}`}</span>\r\n         <span className=\"types\">{`${item.tip} - ${item.odds.toFixed(\r\n            2\r\n         )}`}</span>\r\n         <span style={display && checkFlag ? {display: \"block\"} : {display: \"none\"}}>{item.active ? <FontAwesomeIcon icon={faCheckCircle} style={{color: \"green\"}}/> : <FontAwesomeIcon icon={faTimesCircle} style={{color: \"red\"}}/>}</span>\r\n      </div>\r\n   );\r\n}\r\nexport default MatchAdd;\r\n","import React from \"react\";\r\n\r\nfunction Match({ match, handleClick }) {\r\n   return (\r\n      <div className=\"match\" id={match.id}>\r\n         <span className=\"teams-names\">{`${match.hosts} - ${match.visitors}`}</span>\r\n         <div className=\"tips\">\r\n         <div>\r\n            <span>1</span>\r\n            <button\r\n               onClick={() =>\r\n                  handleClick(match.id, 1, match.active, match.hostsOdds)\r\n               }\r\n               className={match.active && match.tip === 1 ? \"active\" : null}\r\n            >\r\n               {match.hostsOdds.toFixed(2)}\r\n            </button>\r\n         </div>\r\n         <div>\r\n            <span>0</span>\r\n            <button\r\n               onClick={() =>\r\n                  handleClick(match.id, 0, match.active, match.drawOdds)\r\n               }\r\n               className={match.active && match.tip === 0 ? \"active\" : null}\r\n            >\r\n               {match.drawOdds.toFixed(2)}\r\n            </button>\r\n         </div>\r\n         <div>\r\n            <span>2</span>\r\n            <button\r\n               onClick={() =>\r\n                  handleClick(match.id, 2, match.active, match.visitorsOdds)\r\n               }\r\n               className={match.active && match.tip === 2 ? \"active\" : null}\r\n            >\r\n               {match.visitorsOdds.toFixed(2)}\r\n            </button>\r\n         </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Match;\r\n","import React from \"react\";\r\nimport MatchAdd from \"./MatchAdd\";\r\nimport Match from \"./Match\";\r\n\r\nconst Main = (props) => {\r\n   let matches = [...props.matches];\r\n   matches = matches.map((item) => (\r\n      <Match key={item.id} match={item} handleClick={props.handleClick} />\r\n   ));\r\n   let matchesAdd = [...props.matchesAdd];\r\n   matchesAdd.sort((a, b) => {\r\n      return a.id - b.id;\r\n   });\r\n   matchesAdd = matchesAdd.map((item) => (\r\n      <MatchAdd key={item.id} item={item} display={false}/>\r\n   ));\r\n   return (\r\n      <main className=\"main\">\r\n         <div className=\"container\">\r\n            <div className=\"matches\">{matches}</div>\r\n            <div className=\"matchesAdd\">\r\n               <div className=\"box\">\r\n                  <div className=\"type-matches\">{matchesAdd}</div>\r\n                  <div className=\"summary\">\r\n                     {matchesAdd.length > 0 ? (\r\n                        <>\r\n                           <div>\r\n                              <span className=\"grow\">Overall odds:</span>\r\n                              <strong>{props.odds.toFixed(2)}</strong>\r\n                           </div>\r\n                           <div>\r\n                              <span className=\"grow\">Total stake ($):</span>\r\n                              <input\r\n                                 type=\"number\"\r\n                                 min=\"1\"\r\n                                 max={props.money >= 1 ? props.money : 1}\r\n                                 value={props.moneyToPay}\r\n                                 onChange={props.handleChange}\r\n                              ></input>\r\n                           </div>\r\n                           <div>\r\n                              <span className=\"grow\">Possible winnings:</span>\r\n                                 <span>{`${props.moneyToWin.toFixed(2)} $`}</span>\r\n                           </div>\r\n                           <div>\r\n                              <button\r\n                                 className=\"clear\"\r\n                                 onClick={props.clearMatchesAdd}\r\n                              >\r\n                                 Remove all\r\n                              </button>\r\n                              <span className=\"grow\"></span>\r\n                              <button onClick={props.addBet}>Bet</button>\r\n                           </div>\r\n                        </>\r\n                     ) : (\r\n                        <div className=\"empty\">Coupon is empty</div>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Coupon({coupon, odds, moneyToPay, moneyToWin}) {\r\n \r\n   return (\r\n        <div className=\"coupon\">\r\n            <div className=\"element\">{coupon}</div>\r\n            <div className=\"summary\">\r\n                <div>\r\n                    <span>Overall odds: </span>\r\n                    <span>\r\n                        <strong>{odds.toFixed(2)}</strong>\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <span>Stake: </span>\r\n                    <span>\r\n                        <strong>{moneyToPay}$</strong>\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <span>Possible win: </span>\r\n                    <span>\r\n                        <strong>{moneyToWin.toFixed(2)}$</strong>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    </div>\r\n   );\r\n}\r\nexport default Coupon;\r\n","import React from \"react\";\r\nimport MatchAdd from \"./MatchAdd\";\r\nimport Coupon from \"./Coupon\"\r\n\r\nconst Coupons = (props) => {\r\n   const results = [...props.results].map(item => {\r\n      return(\r\n         <div className=\"result\" key={item.id}>\r\n            <span className=\"names-of-teams\">{`${item.hosts} - ${item.visitors}`}</span>\r\n            <span className=\"types\">{item.score}</span>\r\n         </div>)\r\n         }\r\n      )\r\n   const coupons = [...props.coupons].map((item, index) => {\r\n      const coupon = item.matchAdd.map((item) => {\r\n         return <MatchAdd key={item.id} item={item} display={true} checkFlag={props.checkFlag}/>;\r\n      });\r\n      return (\r\n         <Coupon key={index}  coupon={coupon} odds={item.odds} moneyToPay={item.moneyToPay} moneyToWin={item.moneyToWin}/>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <main className=\"coupons\">\r\n         <div className=\"container\">\r\n            {props.coupons.length ? coupons : <div className=\"no-coupons\">You don't have coupons</div>}\r\n\r\n            <button className=\"check-result\" onClick={props.checkResult} style={props.checkFlag || !coupons.length ? {display: \"none\"} : {display: \"block\"}}>Check result</button>\r\n         </div>\r\n         <div className=\"container\" style={props.checkFlag ? {display: \"block\"} : {display: \"none\"}}>\r\n            {results}\r\n         </div>\r\n      </main>\r\n      \r\n   );\r\n};\r\nexport default Coupons;\r\n","import React from \"react\";\r\nimport { Route, Link} from \"react-router-dom\";\r\nfunction Header({ money }) {\r\n \r\n   return (\r\n    <header>\r\n        <span>My money: {money.toFixed(2)}$</span>\r\n            <Route exact path=\"/\">\r\n                <Link to=\"/coupons\" className=\"change-site\">My cupons</Link>\r\n            </Route>\r\n            <Route exact path=\"/coupons\">\r\n                <Link to=\"/\" className=\"change-site\">Back</Link>\r\n            </Route>\r\n    </header>\r\n   );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport Main from \"./Main\";\nimport Coupons from \"./Coupons\";\nimport Header from \"./Header\"\n\n\nclass App extends React.Component {\n   state = {\n      matches: [],\n      matchesAdd: [],\n      coupons: [],\n      results: [],\n      money: 100,\n      moneyToPay: 1,\n      checkFlag: false,\n   };\n\n   handleClick = (id, tip, active, odds) => {\n      let matches = [...this.state.matches];\n      let matchesAdd = [...this.state.matchesAdd];\n      if (!active) {\n         matchesAdd = matchesAdd.concat(\n            matches\n               .filter((item) => item.id === id && !item.active)\n               .map(\n                  (item) =>\n                     (item = {\n                        id: item.id,\n                        hosts: item.hosts,\n                        visitors: item.visitors,\n                        odds,\n                        tip,\n                     })\n               )\n         );\n\n         matches = matches\n            .filter((item) => item.id !== id)\n            .concat(\n               matches\n                  .filter((item) => item.id === id)\n                  .map(\n                     (item) =>\n                        (item = {\n                           id: item.id,\n                           hosts: item.hosts,\n                           visitors: item.visitors,\n                           hostsOdds: item.hostsOdds,\n                           drawOdds: item.drawOdds,\n                           visitorsOdds: item.visitorsOdds,\n                           active: true,\n                           tip,\n                        })\n                  )\n            );\n      } else if (active) {\n         if (\n            tip ===\n            matchesAdd[matchesAdd.findIndex((item) => item.id === id)].tip\n         ) {\n            matchesAdd.splice(\n               matchesAdd.findIndex((item) => item.id === id),\n               1\n            );\n            matches = matches\n               .filter((item) => item.id !== id)\n               .concat(\n                  matches\n                     .filter((item) => item.id === id)\n                     .map(\n                        (item) =>\n                           (item = {\n                              id: item.id,\n                              hosts: item.hosts,\n                              visitors: item.visitors,\n                              hostsOdds: item.hostsOdds,\n                              drawOdds: item.drawOdds,\n                              visitorsOdds: item.visitorsOdds,\n                              active: false,\n                              tip,\n                           })\n                     )\n               );\n         } else {\n            matches = matches\n               .filter((item) => item.id !== id)\n               .concat(\n                  matches\n                     .filter((item) => item.id === id)\n                     .map(\n                        (item) =>\n                           (item = {\n                              id: item.id,\n                              hosts: item.hosts,\n                              visitors: item.visitors,\n                              hostsOdds: item.hostsOdds,\n                              drawOdds: item.drawOdds,\n                              visitorsOdds: item.visitorsOdds,\n                              active: true,\n                              tip,\n                           })\n                     )\n               );\n            matchesAdd.splice(\n               matchesAdd.findIndex((item) => item.id === id),\n               1\n            );\n            matchesAdd = matchesAdd.concat(\n               matches\n                  .filter((item) => item.id === id)\n                  .map(\n                     (item) =>\n                        (item = {\n                           id: item.id,\n                           hosts: item.hosts,\n                           visitors: item.visitors,\n                           odds,\n                           tip,\n                        })\n                  )\n            );\n         }\n      }\n\n      matches.sort((a, b) => {\n         return a.id - b.id;\n      });\n      this.setState({\n         matchesAdd,\n         matches,\n      });\n   };\n\n   clearMatchesAdd = () => {\n      const matches = [...this.state.matches];\n      matches.map((item) => (item.active = false));\n      this.setState({\n         matchesAdd: [],\n         matches,\n         moneyToPay: 1,\n      });\n   };\n\n   handleChange = (event) => {\n      this.setState({\n         moneyToPay: event.target.value,\n      });\n   };\n\n   addBet = () => {\n      if(!this.state.checkFlag){\n         let odds = 1;\n         for (const item of [...this.state.matchesAdd]) {\n            odds *= item.odds;\n         }\n\n         const { money, moneyToPay } = this.state;\n         if (money >= moneyToPay && moneyToPay >= 1) {\n            const coupons = [...this.state.coupons];\n            coupons.push({\n               matchAdd: [...this.state.matchesAdd],\n               moneyToPay,\n               odds,\n               moneyToWin: this.state.moneyToPay * odds * 0.88,\n            });\n            this.setState({\n               coupons,\n               money: money - moneyToPay,\n            });\n            this.clearMatchesAdd();\n         }\n   }\n   else{\n      alert(\"You check results\")\n   }\n   };\n\n   checkResult = () => {\n         let coupons = [...this.state.coupons];\n         for (let i = 0; i < coupons.length; i++) {\n            const stateResults = [...this.state.results];\n            let results = [];\n            \n      \n         for (let a = 0; a < stateResults.length; a++) {\n            \n            results = results.concat(\n               stateResults[stateResults.findIndex(item => item.id===coupons[i].matchAdd[a < coupons[i].matchAdd.length? a: coupons[i].matchAdd.length -1].id)]\n            )\n            \n            \n            if (\n               coupons[i].matchAdd[a < coupons[i].matchAdd.length? a: coupons[i].matchAdd.length -1].tip === results[a < coupons[i].matchAdd.length? a: coupons[i].matchAdd.length -1].result\n            ) {\n               coupons[i].matchAdd[a < coupons[i].matchAdd.length? a: coupons[i].matchAdd.length -1].active = true;\n            } else{\n               coupons[i].matchAdd[a < coupons[i].matchAdd.length? a: coupons[i].matchAdd.length -1].active = false;\n            }\n         }\n         this.setState({\n            coupons,\n            checkFlag: true,\n         }); \n      }\n   \n      this.addMoney();\n   };\n\n   addMoney = () => {\n      const coupons = [...this.state.coupons];\n      for(let i=0; i<coupons.length; i++){\n         let checkArray = [];\n         checkArray = coupons[i].matchAdd.filter(item => item.active===true)\n         \n         if(checkArray.length===coupons[i].matchAdd.length){\n            this.setState((prevstate) => {\n               return {\n                  money: prevstate.money + coupons[i].moneyToWin\n               }\n               \n            })\n         \n      }\n   }\n   };\n   generateScoors = () => {\n      const win = [\n         \"1:0\",\n         \"2:0\",\n         \"3:0\",\n         \"4:0\",\n         \"5:0\",\n         \"2:1\",\n         \"3:1\",\n         \"3:2\",\n         \"4:1\",\n         \"4:2\",\n         \"4:3\",\n         \"5:1\",\n         \"5:2\",\n         \"5:3\",\n         \"5:4\",\n      ];\n      const draw = [\"0:0\", \"1:1\", \"2:2\", \"3:3\", \"4:4\", \"5:5\"];\n      const loss = [\n         \"0:1\",\n         \"0:2\",\n         \"0:3\",\n         \"0:4\",\n         \"0:5\",\n         \"1:2\",\n         \"1:3\",\n         \"2:3\",\n         \"1:4\",\n         \"2:4\",\n         \"3:4\",\n         \"1:5\",\n         \"2:5\",\n         \"3:5\",\n         \"4:5\",\n      ];\n      let matches = [...this.state.matches];\n      const results = matches.map((item) => {\n         const hostsChance = Math.floor(\n            (item.visitorsOdds /\n               (item.hostsOdds + item.drawOdds + item.visitorsOdds)) *\n               100\n         );\n         const drawChance = Math.floor(\n            (item.drawOdds /\n               (item.hostsOdds + item.drawOdds + item.visitorsOdds)) *\n               100\n         );\n         const visitorsChance = Math.floor(\n            (item.hostsOdds /\n               (item.hostsOdds + item.drawOdds + item.visitorsOdds)) *\n               100\n         );\n\n         const random = Math.floor(\n            Math.random() * (hostsChance + drawChance + visitorsChance)\n         );\n         let result = null;\n         if (random <= hostsChance) {\n            result = {\n               score: win[Math.floor(Math.random() * win.length)],\n               result: 1,\n               id: item.id,\n               hosts: item.hosts,\n               visitors: item.visitors,\n            };\n         } else if (random <= hostsChance + drawChance) {\n            result = {\n               score: draw[Math.floor(Math.random() * draw.length)],\n               result: 0,\n               id: item.id,\n               hosts: item.hosts,\n               visitors: item.visitors,\n            };\n         } else if (random <= hostsChance + drawChance + visitorsChance) {\n            result = {\n               score: loss[Math.floor(Math.random() * loss.length)],\n               result: 2,\n               id: item.id,\n               hosts: item.hosts,\n               visitors: item.visitors,\n            };\n         }\n         return result;\n      });\n      if (this.state.results.length < 1) {\n         this.setState({\n            results,\n         });\n      }\n   };\n\n   componentDidMount() {\n      fetch(\"data/betting.json\")\n         .then((response) => response.json())\n         .then((data) => {\n            this.setState({\n               matches: data.matches,\n            });\n\n            this.generateScoors();\n         });\n   }\n   render() {\n      const { matches, matchesAdd, coupons, money, moneyToPay, checkFlag, results} = this.state;\n      let odds = 1;\n      for (const item of [...this.state.matchesAdd]) {\n         odds *= item.odds;\n      }\n      const moneyToWin = this.state.moneyToPay * odds * 0.88;\n      return (\n         <>\n            <Router basename={process.env.PUBLIC_URL}>\n               <Header money={this.state.money}/>\n               <Switch>\n                  <Route\n                     exact\n                     path=\"/\"\n                     render={() => (\n                        <Main\n                           matches={matches}\n                           matchesAdd={matchesAdd}\n                           coupons={coupons}\n                           money={money}\n                           moneyToPay={moneyToPay}\n                           handleClick={this.handleClick}\n                           clearMatchesAdd={this.clearMatchesAdd}\n                           handleChange={this.handleChange}\n                           addBet={this.addBet}\n                           odds={odds}\n                           moneyToWin={moneyToWin}\n                           checkFlag={checkFlag}\n                        />\n                     )}\n                  />\n                  <Route\n                     exact\n                     path=\"/coupons\"\n                     render={() => (\n                        <Coupons\n                           matches={matches}\n                           coupons={coupons}\n                           money={money}\n                           checkResult={this.checkResult}\n                           checkFlag={checkFlag}\n                           results={results}\n                        />\n                     )}\n                  />\n               </Switch>\n               <footer>Rafał Drożdż </footer>\n            </Router>\n         </>\n      );\n   }\n}\n\nexport default App;\n\n// let stateResults = [...this.state.results];\n//          let winnings = [];\n//          let matchAdd = [...coupons[i].matchAdd];\n//          console.log(matchAdd);\n//          for (let a = 0; a < matchAdd.length; a++) {\n//             winnings = winnings.concat(\n//                stateResults.filter((item) => item.result === matchAdd[a].tip)\n//             );\n//          }\n//          console.log(stateResults);\n//          if (winnings.length > 10) {\n//             winnings.length = winnings.length / 10;\n//          }\n\n//          for (let a = 0; a < matchAdd.length; a++) {\n//             matchAdd = matchAdd\n//                .filter((item) => item.id === winnings[a].id)\n//                .map(\n//                   (item) =>\n//                      (item = {\n//                         id: item.id,\n//                         hosts: item.hosts,\n//                         visitors: item.visitors,\n//                         tip: item.tip,\n//                         odds: 3.25,\n//                         active: true,\n//                      })\n//                );\n//          }\n\n//          console.log(winnings);\n//          console.log(matchAdd);\n//\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}